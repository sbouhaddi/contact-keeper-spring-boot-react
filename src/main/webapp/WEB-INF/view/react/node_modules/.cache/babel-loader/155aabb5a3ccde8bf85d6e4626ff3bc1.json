{"ast":null,"code":"var _jsxFileName = \"/Users/bouhaddisabri/IdeaProjects/DependecyInjection-Spring5/contacts-app/src/components/contacts/ContactForm.js\";\nimport React, { useState, useContext, useEffect } from 'react';\nimport ContactContext from '../../context/contact/contactContext';\nimport AuthContext from '../../context/auth/authContext';\n\nconst ContactForm = () => {\n  const [contact, setContact] = useState({\n    name: '',\n    email: '',\n    phone: '',\n    type: 'personal',\n    user: ''\n  });\n  const {\n    addContact,\n    current,\n    clearCurrent,\n    updateContact\n  } = useContext(ContactContext);\n  const {\n    user\n  } = useContext(AuthContext);\n  const {\n    name,\n    email,\n    phone,\n    type\n  } = contact;\n  useEffect(() => {\n    if (current !== null) {\n      setContact(current);\n    } else {\n      setContact({\n        name: '',\n        email: '',\n        phone: '',\n        type: 'personal'\n      });\n    }\n  }, [current]);\n\n  const handleOnChange = e => setContact({ ...contact,\n    [e.target.name]: e.target.value\n  });\n\n  const handleOnSubmit = e => {\n    e.preventDefault();\n\n    if (current === null) {\n      contact.addContact(contact);\n    } else {\n      updateContact(contact);\n    }\n\n    handleClearContact();\n  };\n\n  const handleClearContact = () => {\n    clearCurrent();\n  };\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleOnSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"text-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, current ? 'Edit Contact' : 'Add Contact'), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Name...\",\n    name: \"name\",\n    value: name,\n    onChange: handleOnChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Email ...\",\n    name: \"email\",\n    value: email,\n    onChange: handleOnChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Phone ...\",\n    name: \"phone\",\n    value: phone,\n    onChange: handleOnChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }, \"Contact Type\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"radio\",\n    name: \"type\",\n    value: \"personal\",\n    checked: type === 'personal',\n    onChange: handleOnChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }), \"Personal \", '', /*#__PURE__*/React.createElement(\"input\", {\n    type: \"radio\",\n    name: \"type\",\n    value: \"professional\",\n    checked: type === 'professional',\n    onChange: handleOnChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }\n  }), \"Professional\", /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-primary btn-block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }\n  }, current ? 'Update Contact' : 'Add Contact')), current && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-light btn-block\",\n    onClick: handleClearContact,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 11\n    }\n  }, \"Clear Contact\")));\n};\n\nexport default ContactForm;","map":{"version":3,"sources":["/Users/bouhaddisabri/IdeaProjects/DependecyInjection-Spring5/contacts-app/src/components/contacts/ContactForm.js"],"names":["React","useState","useContext","useEffect","ContactContext","AuthContext","ContactForm","contact","setContact","name","email","phone","type","user","addContact","current","clearCurrent","updateContact","handleOnChange","e","target","value","handleOnSubmit","preventDefault","handleClearContact"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,EAAsCC,SAAtC,QAAuD,OAAvD;AACA,OAAOC,cAAP,MAA2B,sCAA3B;AACA,OAAOC,WAAP,MAAwB,gCAAxB;;AAEA,MAAMC,WAAW,GAAG,MAAM;AACxB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC;AACrCQ,IAAAA,IAAI,EAAE,EAD+B;AAErCC,IAAAA,KAAK,EAAE,EAF8B;AAGrCC,IAAAA,KAAK,EAAE,EAH8B;AAIrCC,IAAAA,IAAI,EAAE,UAJ+B;AAKrCC,IAAAA,IAAI,EAAE;AAL+B,GAAD,CAAtC;AAQA,QAAM;AAAEC,IAAAA,UAAF;AAAcC,IAAAA,OAAd;AAAuBC,IAAAA,YAAvB;AAAqCC,IAAAA;AAArC,MAAuDf,UAAU,CACrEE,cADqE,CAAvE;AAIA,QAAM;AAAES,IAAAA;AAAF,MAAWX,UAAU,CAACG,WAAD,CAA3B;AAEA,QAAM;AAAEI,IAAAA,IAAF;AAAQC,IAAAA,KAAR;AAAeC,IAAAA,KAAf;AAAsBC,IAAAA;AAAtB,MAA+BL,OAArC;AAEAJ,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIY,OAAO,KAAK,IAAhB,EAAsB;AACpBP,MAAAA,UAAU,CAACO,OAAD,CAAV;AACD,KAFD,MAEO;AACLP,MAAAA,UAAU,CAAC;AACTC,QAAAA,IAAI,EAAE,EADG;AAETC,QAAAA,KAAK,EAAE,EAFE;AAGTC,QAAAA,KAAK,EAAE,EAHE;AAITC,QAAAA,IAAI,EAAE;AAJG,OAAD,CAAV;AAMD;AACF,GAXQ,EAWN,CAACG,OAAD,CAXM,CAAT;;AAaA,QAAMG,cAAc,GAAIC,CAAD,IACrBX,UAAU,CAAC,EAAE,GAAGD,OAAL;AAAc,KAACY,CAAC,CAACC,MAAF,CAASX,IAAV,GAAiBU,CAAC,CAACC,MAAF,CAASC;AAAxC,GAAD,CADZ;;AAGA,QAAMC,cAAc,GAAIH,CAAD,IAAO;AAC5BA,IAAAA,CAAC,CAACI,cAAF;;AACA,QAAIR,OAAO,KAAK,IAAhB,EAAsB;AACpBR,MAAAA,OAAO,CAACO,UAAR,CAAmBP,OAAnB;AACD,KAFD,MAEO;AACLU,MAAAA,aAAa,CAACV,OAAD,CAAb;AACD;;AACDiB,IAAAA,kBAAkB;AACnB,GARD;;AAUA,QAAMA,kBAAkB,GAAG,MAAM;AAC/BR,IAAAA,YAAY;AACb,GAFD;;AAIA,sBACE;AAAM,IAAA,QAAQ,EAAEM,cAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAI,IAAA,SAAS,EAAC,cAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGP,OAAO,GAAG,cAAH,GAAoB,aAD9B,CADF,eAIE;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,WAAW,EAAC,SAFd;AAGE,IAAA,IAAI,EAAC,MAHP;AAIE,IAAA,KAAK,EAAEN,IAJT;AAKE,IAAA,QAAQ,EAAES,cALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,eAWE;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,WAAW,EAAC,WAFd;AAGE,IAAA,IAAI,EAAC,OAHP;AAIE,IAAA,KAAK,EAAER,KAJT;AAKE,IAAA,QAAQ,EAAEQ,cALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXF,eAkBE;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,WAAW,EAAC,WAFd;AAGE,IAAA,IAAI,EAAC,OAHP;AAIE,IAAA,KAAK,EAAEP,KAJT;AAKE,IAAA,QAAQ,EAAEO,cALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAlBF,eAyBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAzBF,eA0BE;AACE,IAAA,IAAI,EAAC,OADP;AAEE,IAAA,IAAI,EAAC,MAFP;AAGE,IAAA,KAAK,EAAC,UAHR;AAIE,IAAA,OAAO,EAAEN,IAAI,KAAK,UAJpB;AAKE,IAAA,QAAQ,EAAEM,cALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA1BF,eAiCY,EAjCZ,eAkCE;AACE,IAAA,IAAI,EAAC,OADP;AAEE,IAAA,IAAI,EAAC,MAFP;AAGE,IAAA,KAAK,EAAC,cAHR;AAIE,IAAA,OAAO,EAAEN,IAAI,KAAK,cAJpB;AAKE,IAAA,QAAQ,EAAEM,cALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAlCF,+BA0CE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAQ,IAAA,SAAS,EAAC,2BAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGH,OAAO,GAAG,gBAAH,GAAsB,aADhC,CADF,CA1CF,EA+CGA,OAAO,iBACN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,SAAS,EAAC,yBADZ;AAEE,IAAA,OAAO,EAAES,kBAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,CAhDJ,CADF;AA2DD,CA1GD;;AA4GA,eAAelB,WAAf","sourcesContent":["import React, { useState, useContext, useEffect } from 'react';\nimport ContactContext from '../../context/contact/contactContext';\nimport AuthContext from '../../context/auth/authContext';\n\nconst ContactForm = () => {\n  const [contact, setContact] = useState({\n    name: '',\n    email: '',\n    phone: '',\n    type: 'personal',\n    user: '',\n  });\n\n  const { addContact, current, clearCurrent, updateContact } = useContext(\n    ContactContext\n  );\n\n  const { user } = useContext(AuthContext);\n\n  const { name, email, phone, type } = contact;\n\n  useEffect(() => {\n    if (current !== null) {\n      setContact(current);\n    } else {\n      setContact({\n        name: '',\n        email: '',\n        phone: '',\n        type: 'personal',\n      });\n    }\n  }, [current]);\n\n  const handleOnChange = (e) =>\n    setContact({ ...contact, [e.target.name]: e.target.value });\n\n  const handleOnSubmit = (e) => {\n    e.preventDefault();\n    if (current === null) {\n      contact.addContact(contact);\n    } else {\n      updateContact(contact);\n    }\n    handleClearContact();\n  };\n\n  const handleClearContact = () => {\n    clearCurrent();\n  };\n\n  return (\n    <form onSubmit={handleOnSubmit}>\n      <h2 className='text-primary'>\n        {current ? 'Edit Contact' : 'Add Contact'}\n      </h2>\n      <input\n        type='text'\n        placeholder='Name...'\n        name='name'\n        value={name}\n        onChange={handleOnChange}\n      />\n      <input\n        type='text'\n        placeholder='Email ...'\n        name='email'\n        value={email}\n        onChange={handleOnChange}\n      />\n      <input\n        type='text'\n        placeholder='Phone ...'\n        name='phone'\n        value={phone}\n        onChange={handleOnChange}\n      />\n      <h5>Contact Type</h5>\n      <input\n        type='radio'\n        name='type'\n        value='personal'\n        checked={type === 'personal'}\n        onChange={handleOnChange}\n      />\n      Personal {''}\n      <input\n        type='radio'\n        name='type'\n        value='professional'\n        checked={type === 'professional'}\n        onChange={handleOnChange}\n      />\n      Professional\n      <div>\n        <button className='btn btn-primary btn-block'>\n          {current ? 'Update Contact' : 'Add Contact'}\n        </button>\n      </div>\n      {current && (\n        <div>\n          <button\n            className='btn btn-light btn-block'\n            onClick={handleClearContact}>\n            Clear Contact\n          </button>\n        </div>\n      )}\n    </form>\n  );\n};\n\nexport default ContactForm;\n"]},"metadata":{},"sourceType":"module"}