{"ast":null,"code":"import React,{useContext,useRef,useEffect}from'react';import ContactContext from'../../context/contact/contactContext';var ContactFilter=function ContactFilter(){var text=useRef('');var _useContext=useContext(ContactContext),filterContacts=_useContext.filterContacts,clearFilter=_useContext.clearFilter,filtered=_useContext.filtered;useEffect(function(){if(filtered===null){text.current.value='';}});var handleFilterContacts=function handleFilterContacts(e){e.preventDefault();if(text.current.value!==null){filterContacts(e.target.value);}else{clearFilter();}};return/*#__PURE__*/React.createElement(\"form\",null,/*#__PURE__*/React.createElement(\"input\",{ref:text,type:\"text\",placeholder:\"Filter Contacts ...\",onChange:handleFilterContacts}));};export default ContactFilter;","map":{"version":3,"sources":["/Users/bouhaddisabri/IdeaProjects/DependecyInjection-Spring5/contacts-api/src/main/frontend/src/components/contacts/ContactFilter.js"],"names":["React","useContext","useRef","useEffect","ContactContext","ContactFilter","text","filterContacts","clearFilter","filtered","current","value","handleFilterContacts","e","preventDefault","target"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,UAAhB,CAA4BC,MAA5B,CAAoCC,SAApC,KAAqD,OAArD,CACA,MAAOC,CAAAA,cAAP,KAA2B,sCAA3B,CAEA,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,EAAM,CAC1B,GAAMC,CAAAA,IAAI,CAAGJ,MAAM,CAAC,EAAD,CAAnB,CAD0B,gBAEwBD,UAAU,CAACG,cAAD,CAFlC,CAElBG,cAFkB,aAElBA,cAFkB,CAEFC,WAFE,aAEFA,WAFE,CAEWC,QAFX,aAEWA,QAFX,CAI1BN,SAAS,CAAC,UAAM,CACd,GAAIM,QAAQ,GAAK,IAAjB,CAAuB,CACrBH,IAAI,CAACI,OAAL,CAAaC,KAAb,CAAqB,EAArB,CACD,CACF,CAJQ,CAAT,CAMA,GAAMC,CAAAA,oBAAoB,CAAG,QAAvBA,CAAAA,oBAAuB,CAACC,CAAD,CAAO,CAClCA,CAAC,CAACC,cAAF,GACA,GAAIR,IAAI,CAACI,OAAL,CAAaC,KAAb,GAAuB,IAA3B,CAAiC,CAC/BJ,cAAc,CAACM,CAAC,CAACE,MAAF,CAASJ,KAAV,CAAd,CACD,CAFD,IAEO,CACLH,WAAW,GACZ,CACF,CAPD,CASA,mBACE,6CACE,6BACE,GAAG,CAAEF,IADP,CAEE,IAAI,CAAC,MAFP,CAGE,WAAW,CAAC,qBAHd,CAIE,QAAQ,CAAEM,oBAJZ,EADF,CADF,CAUD,CA7BD,CA+BA,cAAeP,CAAAA,aAAf","sourcesContent":["import React, { useContext, useRef, useEffect } from 'react';\nimport ContactContext from '../../context/contact/contactContext';\n\nconst ContactFilter = () => {\n  const text = useRef('');\n  const { filterContacts, clearFilter, filtered } = useContext(ContactContext);\n\n  useEffect(() => {\n    if (filtered === null) {\n      text.current.value = '';\n    }\n  });\n\n  const handleFilterContacts = (e) => {\n    e.preventDefault();\n    if (text.current.value !== null) {\n      filterContacts(e.target.value);\n    } else {\n      clearFilter();\n    }\n  };\n\n  return (\n    <form>\n      <input\n        ref={text}\n        type='text'\n        placeholder='Filter Contacts ...'\n        onChange={handleFilterContacts}\n      />\n    </form>\n  );\n};\n\nexport default ContactFilter;\n"]},"metadata":{},"sourceType":"module"}