{"ast":null,"code":"import React,{useContext}from'react';import{FontAwesomeIcon}from'@fortawesome/react-fontawesome';import{faEnvelopeOpen,faPhone}from'@fortawesome/free-solid-svg-icons';import contactContext from'../../context/contact/contactContext';var ContactItem=function ContactItem(_ref){var contact=_ref.contact;var _useContext=useContext(contactContext),deleteContact=_useContext.deleteContact,setCurrent=_useContext.setCurrent,clearCurrent=_useContext.clearCurrent;var handleDeleteContact=function handleDeleteContact(){deleteContact(id);clearCurrent();};var id=contact.id,name=contact.name,email=contact.email,phone=contact.phone,type=contact.type;return/*#__PURE__*/React.createElement(\"div\",{className:\"card bg-light\"},/*#__PURE__*/React.createElement(\"h3\",{className:\"text-primary text-left\"},name,'',/*#__PURE__*/React.createElement(\"span\",{className:'badge '+(type==='professional'?'badge-success':'badge-primary'),style:{float:'right'}},type.charAt(0).toUpperCase()+type.slice(1))),/*#__PURE__*/React.createElement(\"ul\",{className:\"list\"},email&&/*#__PURE__*/React.createElement(\"li\",null,' ',/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faEnvelopeOpen}),\" \",email),phone&&/*#__PURE__*/React.createElement(\"li\",null,' ',/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faPhone}),\" \",phone)),/*#__PURE__*/React.createElement(\"p\",null,/*#__PURE__*/React.createElement(\"button\",{className:\"btn btn-dark btn-sm\",onClick:function onClick(){return setCurrent(contact);}},\"Edit\"),/*#__PURE__*/React.createElement(\"button\",{className:\"btn btn-danger btn-sm\",onClick:handleDeleteContact},\"Delete\")));};export default ContactItem;","map":{"version":3,"sources":["/Users/bouhaddisabri/IdeaProjects/DependecyInjection-Spring5/contacts-api/src/main/webapp/WEB-INF/view/react/src/components/contacts/ContactItem.js"],"names":["React","useContext","FontAwesomeIcon","faEnvelopeOpen","faPhone","contactContext","ContactItem","contact","deleteContact","setCurrent","clearCurrent","handleDeleteContact","id","name","email","phone","type","float","charAt","toUpperCase","slice"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,UAAhB,KAAkC,OAAlC,CACA,OAASC,eAAT,KAAgC,gCAAhC,CACA,OAASC,cAAT,CAAyBC,OAAzB,KAAwC,mCAAxC,CAEA,MAAOC,CAAAA,cAAP,KAA2B,sCAA3B,CAEA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,MAAiB,IAAdC,CAAAA,OAAc,MAAdA,OAAc,iBACiBN,UAAU,CAC5DI,cAD4D,CAD3B,CAC3BG,aAD2B,aAC3BA,aAD2B,CACZC,UADY,aACZA,UADY,CACAC,YADA,aACAA,YADA,CAKnC,GAAMC,CAAAA,mBAAmB,CAAG,QAAtBA,CAAAA,mBAAsB,EAAM,CAChCH,aAAa,CAACI,EAAD,CAAb,CACAF,YAAY,GACb,CAHD,CALmC,GAS3BE,CAAAA,EAT2B,CASML,OATN,CAS3BK,EAT2B,CASvBC,IATuB,CASMN,OATN,CASvBM,IATuB,CASjBC,KATiB,CASMP,OATN,CASjBO,KATiB,CASVC,KATU,CASMR,OATN,CASVQ,KATU,CASHC,IATG,CASMT,OATN,CASHS,IATG,CAWnC,mBACE,2BAAK,SAAS,CAAC,eAAf,eACE,0BAAI,SAAS,CAAC,wBAAd,EACGH,IADH,CAEG,EAFH,cAGE,4BACE,SAAS,CACP,UACCG,IAAI,GAAK,cAAT,CAA0B,eAA1B,CAA4C,eAD7C,CAFJ,CAKE,KAAK,CAAE,CAAEC,KAAK,CAAE,OAAT,CALT,EAMGD,IAAI,CAACE,MAAL,CAAY,CAAZ,EAAeC,WAAf,GAA+BH,IAAI,CAACI,KAAL,CAAW,CAAX,CANlC,CAHF,CADF,cAaE,0BAAI,SAAS,CAAC,MAAd,EACGN,KAAK,eACJ,8BACG,GADH,cAEE,oBAAC,eAAD,EAAiB,IAAI,CAAEX,cAAvB,EAFF,KAE6CW,KAF7C,CAFJ,CAOGC,KAAK,eACJ,8BACG,GADH,cAEE,oBAAC,eAAD,EAAiB,IAAI,CAAEX,OAAvB,EAFF,KAEsCW,KAFtC,CARJ,CAbF,cA2BE,0CACE,8BACE,SAAS,CAAC,qBADZ,CAEE,OAAO,CAAE,yBAAMN,CAAAA,UAAU,CAACF,OAAD,CAAhB,EAFX,SADF,cAME,8BAAQ,SAAS,CAAC,uBAAlB,CAA0C,OAAO,CAAEI,mBAAnD,WANF,CA3BF,CADF,CAwCD,CAnDD,CAyDA,cAAeL,CAAAA,WAAf","sourcesContent":["import React, { useContext } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faEnvelopeOpen, faPhone } from '@fortawesome/free-solid-svg-icons';\nimport PropTypes from 'prop-types';\nimport contactContext from '../../context/contact/contactContext';\n\nconst ContactItem = ({ contact }) => {\n  const { deleteContact, setCurrent, clearCurrent } = useContext(\n    contactContext\n  );\n\n  const handleDeleteContact = () => {\n    deleteContact(id);\n    clearCurrent();\n  };\n  const { id, name, email, phone, type } = contact;\n\n  return (\n    <div className='card bg-light'>\n      <h3 className='text-primary text-left'>\n        {name}\n        {''}\n        <span\n          className={\n            'badge ' +\n            (type === 'professional' ? 'badge-success' : 'badge-primary')\n          }\n          style={{ float: 'right' }}>\n          {type.charAt(0).toUpperCase() + type.slice(1)}\n        </span>\n      </h3>\n      <ul className='list'>\n        {email && (\n          <li>\n            {' '}\n            <FontAwesomeIcon icon={faEnvelopeOpen} /> {email}\n          </li>\n        )}\n        {phone && (\n          <li>\n            {' '}\n            <FontAwesomeIcon icon={faPhone} /> {phone}\n          </li>\n        )}\n      </ul>\n      <p>\n        <button\n          className='btn btn-dark btn-sm'\n          onClick={() => setCurrent(contact)}>\n          Edit\n        </button>\n        <button className='btn btn-danger btn-sm' onClick={handleDeleteContact}>\n          Delete\n        </button>\n      </p>\n    </div>\n  );\n};\n\nContactItem.propTypes = {\n  contact: PropTypes.object.isRequired,\n};\n\nexport default ContactItem;\n"]},"metadata":{},"sourceType":"module"}