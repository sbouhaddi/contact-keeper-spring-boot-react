{"ast":null,"code":"var _jsxFileName = \"/Users/bouhaddisabri/IdeaProjects/DependecyInjection-Spring5/contacts-app/src/components/contacts/ContactItem.js\";\nimport React, { useContext } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faEnvelopeOpen, faPhone } from '@fortawesome/free-solid-svg-icons';\nimport PropTypes from 'prop-types';\nimport contactContext from '../../context/contact/contactContext';\n\nconst ContactItem = ({\n  contact: {\n    id,\n    name,\n    email,\n    phone,\n    type\n  }\n}) => {\n  const {\n    deleteContact\n  } = useContext(contactContext);\n\n  const handleDeleteContact = () => {\n    console.log(id);\n    deleteContact(id);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card bg-light\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"text-primary text-left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }\n  }, name, '', /*#__PURE__*/React.createElement(\"span\", {\n    className: 'badge ' + (type === 'professional' ? 'badge-success' : 'badge-primary'),\n    style: {\n      float: 'right'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }, type.charAt(0).toUpperCase() + type.slice(1))), /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }, email && /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 11\n    }\n  }, ' ', /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faEnvelopeOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }), \" \", email), phone && /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }\n  }, ' ', /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faPhone,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }), \" \", phone)), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-dark btn-sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, \"Edit\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-danger btn-sm\",\n    onClick: handleDeleteContact,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, \"Delete\")));\n};\n\nContactItem.propTypes = {\n  contact: PropTypes.object.isRequired\n};\nexport default ContactItem;","map":{"version":3,"sources":["/Users/bouhaddisabri/IdeaProjects/DependecyInjection-Spring5/contacts-app/src/components/contacts/ContactItem.js"],"names":["React","useContext","FontAwesomeIcon","faEnvelopeOpen","faPhone","PropTypes","contactContext","ContactItem","contact","id","name","email","phone","type","deleteContact","handleDeleteContact","console","log","float","charAt","toUpperCase","slice","propTypes","object","isRequired"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,cAAT,EAAyBC,OAAzB,QAAwC,mCAAxC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,cAAP,MAA2B,sCAA3B;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA,OAAO,EAAE;AAAEC,IAAAA,EAAF;AAAMC,IAAAA,IAAN;AAAYC,IAAAA,KAAZ;AAAmBC,IAAAA,KAAnB;AAA0BC,IAAAA;AAA1B;AAAX,CAAD,KAAmD;AACrE,QAAM;AAAEC,IAAAA;AAAF,MAAoBb,UAAU,CAACK,cAAD,CAApC;;AAEA,QAAMS,mBAAmB,GAAG,MAAM;AAChCC,IAAAA,OAAO,CAACC,GAAR,CAAYR,EAAZ;AACAK,IAAAA,aAAa,CAACL,EAAD,CAAb;AACD,GAHD;;AAKA,sBACE;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAI,IAAA,SAAS,EAAC,wBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGC,IADH,EAEG,EAFH,eAGE;AACE,IAAA,SAAS,EACP,YACCG,IAAI,KAAK,cAAT,GAA0B,eAA1B,GAA4C,eAD7C,CAFJ;AAKE,IAAA,KAAK,EAAE;AAAEK,MAAAA,KAAK,EAAE;AAAT,KALT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMGL,IAAI,CAACM,MAAL,CAAY,CAAZ,EAAeC,WAAf,KAA+BP,IAAI,CAACQ,KAAL,CAAW,CAAX,CANlC,CAHF,CADF,eAaE;AAAI,IAAA,SAAS,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGV,KAAK,iBACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,GADH,eAEE,oBAAC,eAAD;AAAiB,IAAA,IAAI,EAAER,cAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,OAE6CQ,KAF7C,CAFJ,EAOGC,KAAK,iBACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,GADH,eAEE,oBAAC,eAAD;AAAiB,IAAA,IAAI,EAAER,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,OAEsCQ,KAFtC,CARJ,CAbF,eA2BE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAQ,IAAA,SAAS,EAAC,qBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAQ,IAAA,SAAS,EAAC,uBAAlB;AAA0C,IAAA,OAAO,EAAEG,mBAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,CA3BF,CADF;AAoCD,CA5CD;;AA8CAR,WAAW,CAACe,SAAZ,GAAwB;AACtBd,EAAAA,OAAO,EAAEH,SAAS,CAACkB,MAAV,CAAiBC;AADJ,CAAxB;AAIA,eAAejB,WAAf","sourcesContent":["import React, { useContext } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faEnvelopeOpen, faPhone } from '@fortawesome/free-solid-svg-icons';\nimport PropTypes from 'prop-types';\nimport contactContext from '../../context/contact/contactContext';\n\nconst ContactItem = ({ contact: { id, name, email, phone, type } }) => {\n  const { deleteContact } = useContext(contactContext);\n\n  const handleDeleteContact = () => {\n    console.log(id);\n    deleteContact(id);\n  };\n\n  return (\n    <div className='card bg-light'>\n      <h3 className='text-primary text-left'>\n        {name}\n        {''}\n        <span\n          className={\n            'badge ' +\n            (type === 'professional' ? 'badge-success' : 'badge-primary')\n          }\n          style={{ float: 'right' }}>\n          {type.charAt(0).toUpperCase() + type.slice(1)}\n        </span>\n      </h3>\n      <ul className='list'>\n        {email && (\n          <li>\n            {' '}\n            <FontAwesomeIcon icon={faEnvelopeOpen} /> {email}\n          </li>\n        )}\n        {phone && (\n          <li>\n            {' '}\n            <FontAwesomeIcon icon={faPhone} /> {phone}\n          </li>\n        )}\n      </ul>\n      <p>\n        <button className='btn btn-dark btn-sm'>Edit</button>\n        <button className='btn btn-danger btn-sm' onClick={handleDeleteContact}>\n          Delete\n        </button>\n      </p>\n    </div>\n  );\n};\n\nContactItem.propTypes = {\n  contact: PropTypes.object.isRequired,\n};\n\nexport default ContactItem;\n"]},"metadata":{},"sourceType":"module"}