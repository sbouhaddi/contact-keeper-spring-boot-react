{"ast":null,"code":"var _jsxFileName = \"/Users/bouhaddisabri/IdeaProjects/DependecyInjection-Spring5/contacts-app/src/context/auth/AuthState.js\";\nimport React, { useReducer } from 'react';\nimport AuthContext from './authContext';\nimport AuthReducer from './authReducer';\nimport axios from 'axios';\nimport setAuthToken from '../../utils/setAuthToken';\nimport { REGISTER_SUCCESS, LOGIN_SUCCESS, REGISTER_FAIL, USER_LOADED, AUTH_ERROR, LOGIN_FAIL, LOGOUT, CLEAR_ERRORS } from '../types';\n\nconst AuthState = ({\n  children\n}) => {\n  const initialState = {\n    token: localStorage.getItem('token'),\n    isAuthenticated: null,\n    user: null,\n    loading: true,\n    error: null\n  };\n  const [state, dispatch] = useReducer(AuthReducer, initialState); //LOAD USER\n\n  const loadUser = () => {}; //REGISTER USER\n\n\n  const registerUser = async user => {\n    try {\n      const res = await axios.post(`/api/sign-up`, user);\n      console.log(res.data);\n      dispatch({\n        type: REGISTER_SUCCESS,\n        payload: res.data\n      });\n      loadUser(res.data.id);\n    } catch (error) {\n      dispatch({\n        type: REGISTER_FAIL,\n        payload: error.response.data\n      });\n    }\n  }; //LOGIN USER\n  //LOGOUT\n  //CLEAR ERROR\n\n\n  const clearErrors = () => dispatch({\n    type: CLEAR_ERRORS\n  });\n\n  return /*#__PURE__*/React.createElement(AuthContext.Provider, {\n    value: {\n      token: state.token,\n      isAuthenticated: state.isAuthenticated,\n      user: state.user,\n      loading: state.loading,\n      error: state.error,\n      registerUser,\n      clearErrors\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }\n  }, children);\n};\n\nexport default AuthState;","map":{"version":3,"sources":["/Users/bouhaddisabri/IdeaProjects/DependecyInjection-Spring5/contacts-app/src/context/auth/AuthState.js"],"names":["React","useReducer","AuthContext","AuthReducer","axios","setAuthToken","REGISTER_SUCCESS","LOGIN_SUCCESS","REGISTER_FAIL","USER_LOADED","AUTH_ERROR","LOGIN_FAIL","LOGOUT","CLEAR_ERRORS","AuthState","children","initialState","token","localStorage","getItem","isAuthenticated","user","loading","error","state","dispatch","loadUser","registerUser","res","post","console","log","data","type","payload","id","response","clearErrors"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,0BAAzB;AACA,SACEC,gBADF,EAEEC,aAFF,EAGEC,aAHF,EAIEC,WAJF,EAKEC,UALF,EAMEC,UANF,EAOEC,MAPF,EAQEC,YARF,QASO,UATP;;AAWA,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAClC,QAAMC,YAAY,GAAG;AACnBC,IAAAA,KAAK,EAAEC,YAAY,CAACC,OAAb,CAAqB,OAArB,CADY;AAEnBC,IAAAA,eAAe,EAAE,IAFE;AAGnBC,IAAAA,IAAI,EAAE,IAHa;AAInBC,IAAAA,OAAO,EAAE,IAJU;AAKnBC,IAAAA,KAAK,EAAE;AALY,GAArB;AAOA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBxB,UAAU,CAACE,WAAD,EAAca,YAAd,CAApC,CARkC,CAUlC;;AACA,QAAMU,QAAQ,GAAG,MAAM,CAAE,CAAzB,CAXkC,CAalC;;;AACA,QAAMC,YAAY,GAAG,MAAON,IAAP,IAAgB;AACnC,QAAI;AACF,YAAMO,GAAG,GAAG,MAAMxB,KAAK,CAACyB,IAAN,CAAY,cAAZ,EAA2BR,IAA3B,CAAlB;AACAS,MAAAA,OAAO,CAACC,GAAR,CAAYH,GAAG,CAACI,IAAhB;AACAP,MAAAA,QAAQ,CAAC;AACPQ,QAAAA,IAAI,EAAE3B,gBADC;AAEP4B,QAAAA,OAAO,EAAEN,GAAG,CAACI;AAFN,OAAD,CAAR;AAKAN,MAAAA,QAAQ,CAACE,GAAG,CAACI,IAAJ,CAASG,EAAV,CAAR;AACD,KATD,CASE,OAAOZ,KAAP,EAAc;AACdE,MAAAA,QAAQ,CAAC;AACPQ,QAAAA,IAAI,EAAEzB,aADC;AAEP0B,QAAAA,OAAO,EAAEX,KAAK,CAACa,QAAN,CAAeJ;AAFjB,OAAD,CAAR;AAID;AACF,GAhBD,CAdkC,CAgClC;AACA;AACA;;;AACA,QAAMK,WAAW,GAAG,MAAMZ,QAAQ,CAAC;AAAEQ,IAAAA,IAAI,EAAEpB;AAAR,GAAD,CAAlC;;AAEA,sBACE,oBAAC,WAAD,CAAa,QAAb;AACE,IAAA,KAAK,EAAE;AACLI,MAAAA,KAAK,EAAEO,KAAK,CAACP,KADR;AAELG,MAAAA,eAAe,EAAEI,KAAK,CAACJ,eAFlB;AAGLC,MAAAA,IAAI,EAAEG,KAAK,CAACH,IAHP;AAILC,MAAAA,OAAO,EAAEE,KAAK,CAACF,OAJV;AAKLC,MAAAA,KAAK,EAAEC,KAAK,CAACD,KALR;AAMLI,MAAAA,YANK;AAOLU,MAAAA;AAPK,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAUGtB,QAVH,CADF;AAcD,CAnDD;;AAqDA,eAAeD,SAAf","sourcesContent":["import React, { useReducer } from 'react';\nimport AuthContext from './authContext';\nimport AuthReducer from './authReducer';\nimport axios from 'axios';\nimport setAuthToken from '../../utils/setAuthToken';\nimport {\n  REGISTER_SUCCESS,\n  LOGIN_SUCCESS,\n  REGISTER_FAIL,\n  USER_LOADED,\n  AUTH_ERROR,\n  LOGIN_FAIL,\n  LOGOUT,\n  CLEAR_ERRORS,\n} from '../types';\n\nconst AuthState = ({ children }) => {\n  const initialState = {\n    token: localStorage.getItem('token'),\n    isAuthenticated: null,\n    user: null,\n    loading: true,\n    error: null,\n  };\n  const [state, dispatch] = useReducer(AuthReducer, initialState);\n\n  //LOAD USER\n  const loadUser = () => {};\n\n  //REGISTER USER\n  const registerUser = async (user) => {\n    try {\n      const res = await axios.post(`/api/sign-up`, user);\n      console.log(res.data);\n      dispatch({\n        type: REGISTER_SUCCESS,\n        payload: res.data,\n      });\n\n      loadUser(res.data.id);\n    } catch (error) {\n      dispatch({\n        type: REGISTER_FAIL,\n        payload: error.response.data,\n      });\n    }\n  };\n\n  //LOGIN USER\n  //LOGOUT\n  //CLEAR ERROR\n  const clearErrors = () => dispatch({ type: CLEAR_ERRORS });\n\n  return (\n    <AuthContext.Provider\n      value={{\n        token: state.token,\n        isAuthenticated: state.isAuthenticated,\n        user: state.user,\n        loading: state.loading,\n        error: state.error,\n        registerUser,\n        clearErrors,\n      }}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport default AuthState;\n"]},"metadata":{},"sourceType":"module"}