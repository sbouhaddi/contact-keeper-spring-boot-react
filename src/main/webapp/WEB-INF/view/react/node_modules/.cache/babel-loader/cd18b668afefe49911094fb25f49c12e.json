{"ast":null,"code":"var _jsxFileName = \"/Users/bouhaddisabri/IdeaProjects/DependecyInjection-Spring5/contacts-app/src/components/contacts/ContactForm.js\";\nimport React, { useState, useContext, useEffect } from 'react';\nimport ContactContext from '../../context/contact/contactContext';\n\nconst ContactForm = () => {\n  const [contact, setContact] = useState({\n    name: '',\n    email: '',\n    phone: '',\n    type: 'personal'\n  });\n  const {\n    addContact,\n    current,\n    clearCurrent\n  } = useContext(ContactContext);\n  const {\n    name,\n    email,\n    phone,\n    type\n  } = contact;\n  useEffect(() => {\n    if (current !== null) {\n      setContact(current);\n    } else {\n      setContact({\n        name: '',\n        email: '',\n        phone: '',\n        type: 'personal'\n      });\n    }\n  }, [current]);\n\n  const handleOnChange = e => setContact({ ...contact,\n    [e.target.name]: e.target.value\n  });\n\n  const handleOnSubmit = e => {\n    e.preventDefault();\n    addContact(contact);\n    setContact({\n      name: '',\n      email: '',\n      phone: '',\n      type: 'personal'\n    });\n  };\n\n  const handleClearContact = e => {\n    e.preventDefault();\n    setContact({\n      name: '',\n      email: '',\n      phone: '',\n      type: 'personal'\n    });\n    clearCurrent();\n  };\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleOnSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"text-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }, \"Add Contact\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Name...\",\n    name: \"name\",\n    value: name,\n    onChange: handleOnChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Email ...\",\n    name: \"email\",\n    value: email,\n    onChange: handleOnChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Phone ...\",\n    name: \"phone\",\n    value: phone,\n    onChange: handleOnChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }, \"Contact Type\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"radio\",\n    name: \"type\",\n    value: \"personal\",\n    checked: type === 'personal',\n    onChange: handleOnChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }), \"Personal \", '', /*#__PURE__*/React.createElement(\"input\", {\n    type: \"radio\",\n    name: \"type\",\n    value: \"professional\",\n    checked: type === 'professional',\n    onChange: handleOnChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }\n  }), \"Professional\", /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-primary btn-block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }\n  }, current ? 'Edit Contact' : 'Add Contact'), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-light btn-block\",\n    onClick: handleClearContact,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }\n  }, \"Clear Contact\")));\n};\n\nexport default ContactForm;","map":{"version":3,"sources":["/Users/bouhaddisabri/IdeaProjects/DependecyInjection-Spring5/contacts-app/src/components/contacts/ContactForm.js"],"names":["React","useState","useContext","useEffect","ContactContext","ContactForm","contact","setContact","name","email","phone","type","addContact","current","clearCurrent","handleOnChange","e","target","value","handleOnSubmit","preventDefault","handleClearContact"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useEffect } from 'react';\nimport ContactContext from '../../context/contact/contactContext';\n\nconst ContactForm = () => {\n  const [contact, setContact] = useState({\n    name: '',\n    email: '',\n    phone: '',\n    type: 'personal',\n  });\n\n  const { addContact, current, clearCurrent } = useContext(ContactContext);\n\n  const { name, email, phone, type } = contact;\n\n  useEffect(() => {\n    if (current !== null) {\n      setContact(current);\n    } else {\n      setContact({\n        name: '',\n        email: '',\n        phone: '',\n        type: 'personal',\n      });\n    }\n  }, [current]);\n\n  const handleOnChange = (e) =>\n    setContact({ ...contact, [e.target.name]: e.target.value });\n\n  const handleOnSubmit = (e) => {\n    e.preventDefault();\n    addContact(contact);\n    setContact({\n      name: '',\n      email: '',\n      phone: '',\n      type: 'personal',\n    });\n  };\n\n  const handleClearContact = (e) => {\n    e.preventDefault();\n    setContact({\n      name: '',\n      email: '',\n      phone: '',\n      type: 'personal',\n    });\n    clearCurrent();\n  };\n\n  return (\n    <form onSubmit={handleOnSubmit}>\n      <h2 className='text-primary'>Add Contact</h2>\n      <input\n        type='text'\n        placeholder='Name...'\n        name='name'\n        value={name}\n        onChange={handleOnChange}\n      />\n      <input\n        type='text'\n        placeholder='Email ...'\n        name='email'\n        value={email}\n        onChange={handleOnChange}\n      />\n      <input\n        type='text'\n        placeholder='Phone ...'\n        name='phone'\n        value={phone}\n        onChange={handleOnChange}\n      />\n      <h5>Contact Type</h5>\n      <input\n        type='radio'\n        name='type'\n        value='personal'\n        checked={type === 'personal'}\n        onChange={handleOnChange}\n      />\n      Personal {''}\n      <input\n        type='radio'\n        name='type'\n        value='professional'\n        checked={type === 'professional'}\n        onChange={handleOnChange}\n      />\n      Professional\n      <div>\n        <button className='btn btn-primary btn-block'>\n          {current ? 'Edit Contact' : 'Add Contact'}\n        </button>\n        <button\n          className='btn btn-light btn-block'\n          onClick={handleClearContact}>\n          Clear Contact\n        </button>\n      </div>\n    </form>\n  );\n};\n\nexport default ContactForm;\n"]},"metadata":{},"sourceType":"module"}