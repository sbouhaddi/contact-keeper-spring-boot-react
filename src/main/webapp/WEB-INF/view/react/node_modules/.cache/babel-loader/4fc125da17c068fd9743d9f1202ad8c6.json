{"ast":null,"code":"var _jsxFileName = \"/Users/bouhaddisabri/IdeaProjects/DependecyInjection-Spring5/contacts-app/src/components/auth/Login.js\";\nimport React, { useState, useContext, useEffect } from 'react';\nimport AuthContext from '../../context/auth/authContext';\nimport Alertcontext from '../../context/alert/alertContext';\n\nconst Login = props => {\n  const [user, setUser] = useState({\n    email: '',\n    password: ''\n  });\n  const {\n    setAlert\n  } = useContext(Alertcontext);\n  const {\n    loginUser,\n    error,\n    clearErrors,\n    isAuthenticated\n  } = useContext(AuthContext);\n  const {\n    email,\n    password\n  } = user;\n  useEffect(() => {\n    if (error === 'User not found') {\n      setAlert(error, 'danger');\n      clearErrors();\n    }\n\n    if (isAuthenticated) {\n      props.history.push('/');\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [error, isAuthenticated, props.history]);\n\n  const handleOnChange = e => {\n    setUser({ ...user,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const handleOnSubmit = e => {\n    e.preventDefault();\n\n    if (email === '' || password === '') {\n      setAlert('Please enter all fields', 'danger');\n    } else {\n      loginUser(user);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, \"Account \", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }\n  }, \"Login\")), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleOnSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  }, \"Email Address\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"email\",\n    value: email,\n    onChange: handleOnChange,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }\n  }, \"Password\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    name: \"password\",\n    value: password,\n    onChange: handleOnChange,\n    required: true,\n    minLength: \"6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn btn-primary btn-block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }\n  }, \"Login\"))));\n};\n\nexport default Login;","map":{"version":3,"sources":["/Users/bouhaddisabri/IdeaProjects/DependecyInjection-Spring5/contacts-app/src/components/auth/Login.js"],"names":["React","useState","useContext","useEffect","AuthContext","Alertcontext","Login","props","user","setUser","email","password","setAlert","loginUser","error","clearErrors","isAuthenticated","history","push","handleOnChange","e","target","name","value","handleOnSubmit","preventDefault"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useEffect } from 'react';\nimport AuthContext from '../../context/auth/authContext';\nimport Alertcontext from '../../context/alert/alertContext';\n\nconst Login = (props) => {\n  const [user, setUser] = useState({\n    email: '',\n    password: '',\n  });\n\n  const { setAlert } = useContext(Alertcontext);\n  const { loginUser, error, clearErrors, isAuthenticated } = useContext(\n    AuthContext\n  );\n  const { email, password } = user;\n\n  useEffect(() => {\n    if (error === 'User not found') {\n      setAlert(error, 'danger');\n      clearErrors();\n    }\n    if (isAuthenticated) {\n      props.history.push('/');\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [error, isAuthenticated, props.history]);\n\n  const handleOnChange = (e) => {\n    setUser({\n      ...user,\n      [e.target.name]: e.target.value,\n    });\n  };\n  const handleOnSubmit = (e) => {\n    e.preventDefault();\n    if (email === '' || password === '') {\n      setAlert('Please enter all fields', 'danger');\n    } else {\n      loginUser(user);\n    }\n  };\n\n  return (\n    <div className='form-container'>\n      <h1>\n        Account <span className='text-primary'>Login</span>\n      </h1>\n      <form onSubmit={handleOnSubmit}>\n        <div className='form-group'>\n          <label htmlFor='email'>Email Address</label>\n          <input\n            type='text'\n            name='email'\n            value={email}\n            onChange={handleOnChange}\n            required\n          />\n        </div>\n        <div className='form-group'>\n          <label htmlFor='name'>Password</label>\n          <input\n            type='password'\n            name='password'\n            value={password}\n            onChange={handleOnChange}\n            required\n            minLength='6'\n          />\n        </div>\n        <div>\n          <button type='submit' className='btn btn-primary btn-block'>\n            Login\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}