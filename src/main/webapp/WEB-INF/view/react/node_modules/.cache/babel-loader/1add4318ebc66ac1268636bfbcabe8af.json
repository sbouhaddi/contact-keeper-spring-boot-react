{"ast":null,"code":"import _defineProperty from\"/Users/bouhaddisabri/IdeaProjects/DependecyInjection-Spring5/contacts-api/src/main/webapp/WEB-INF/view/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _objectSpread from\"/Users/bouhaddisabri/IdeaProjects/DependecyInjection-Spring5/contacts-api/src/main/webapp/WEB-INF/view/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/Users/bouhaddisabri/IdeaProjects/DependecyInjection-Spring5/contacts-api/src/main/webapp/WEB-INF/view/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useContext,useEffect}from'react';import ContactContext from'../../context/contact/contactContext';var ContactForm=function ContactForm(){var _useState=useState({name:'',email:'',phone:'',type:'personal'}),_useState2=_slicedToArray(_useState,2),contact=_useState2[0],setContact=_useState2[1];var _useContext=useContext(ContactContext),addContact=_useContext.addContact,current=_useContext.current,clearCurrent=_useContext.clearCurrent,updateContact=_useContext.updateContact;var name=contact.name,email=contact.email,phone=contact.phone,type=contact.type;useEffect(function(){if(current!==null){setContact(current);}else{setContact({name:'',email:'',phone:'',type:'personal'});}},[current]);var handleOnChange=function handleOnChange(e){return setContact(_objectSpread(_objectSpread({},contact),{},_defineProperty({},e.target.name,e.target.value)));};var handleOnSubmit=function handleOnSubmit(e){e.preventDefault();if(current===null){addContact(contact);}else{updateContact(contact);}handleClearContact();};var handleClearContact=function handleClearContact(){clearCurrent();};return/*#__PURE__*/React.createElement(\"form\",{onSubmit:handleOnSubmit},/*#__PURE__*/React.createElement(\"h2\",{className:\"text-primary\"},current?'Edit Contact':'Add Contact'),/*#__PURE__*/React.createElement(\"input\",{type:\"text\",placeholder:\"Name...\",name:\"name\",value:name,onChange:handleOnChange}),/*#__PURE__*/React.createElement(\"input\",{type:\"text\",placeholder:\"Email ...\",name:\"email\",value:email,onChange:handleOnChange}),/*#__PURE__*/React.createElement(\"input\",{type:\"text\",placeholder:\"Phone ...\",name:\"phone\",value:phone,onChange:handleOnChange}),/*#__PURE__*/React.createElement(\"h5\",null,\"Contact Type\"),/*#__PURE__*/React.createElement(\"input\",{type:\"radio\",name:\"type\",value:\"personal\",checked:type==='personal',onChange:handleOnChange}),\"Personal \",'',/*#__PURE__*/React.createElement(\"input\",{type:\"radio\",name:\"type\",value:\"professional\",checked:type==='professional',onChange:handleOnChange}),\"Professional\",/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"button\",{className:\"btn btn-primary btn-block\"},current?'Update Contact':'Add Contact')),current&&/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"button\",{className:\"btn btn-light btn-block\",onClick:handleClearContact},\"Clear Contact\")));};export default ContactForm;","map":{"version":3,"sources":["/Users/bouhaddisabri/IdeaProjects/DependecyInjection-Spring5/contacts-api/src/main/webapp/WEB-INF/view/react/src/components/contacts/ContactForm.js"],"names":["React","useState","useContext","useEffect","ContactContext","ContactForm","name","email","phone","type","contact","setContact","addContact","current","clearCurrent","updateContact","handleOnChange","e","target","value","handleOnSubmit","preventDefault","handleClearContact"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useEffect } from 'react';\nimport ContactContext from '../../context/contact/contactContext';\n\nconst ContactForm = () => {\n  const [contact, setContact] = useState({\n    name: '',\n    email: '',\n    phone: '',\n    type: 'personal',\n  });\n\n  const { addContact, current, clearCurrent, updateContact } = useContext(\n    ContactContext\n  );\n\n  const { name, email, phone, type } = contact;\n\n  useEffect(() => {\n    if (current !== null) {\n      setContact(current);\n    } else {\n      setContact({\n        name: '',\n        email: '',\n        phone: '',\n        type: 'personal',\n      });\n    }\n  }, [current]);\n\n  const handleOnChange = (e) =>\n    setContact({ ...contact, [e.target.name]: e.target.value });\n\n  const handleOnSubmit = (e) => {\n    e.preventDefault();\n    if (current === null) {\n      addContact(contact);\n    } else {\n      updateContact(contact);\n    }\n    handleClearContact();\n  };\n\n  const handleClearContact = () => {\n    clearCurrent();\n  };\n\n  return (\n    <form onSubmit={handleOnSubmit}>\n      <h2 className='text-primary'>\n        {current ? 'Edit Contact' : 'Add Contact'}\n      </h2>\n      <input\n        type='text'\n        placeholder='Name...'\n        name='name'\n        value={name}\n        onChange={handleOnChange}\n      />\n      <input\n        type='text'\n        placeholder='Email ...'\n        name='email'\n        value={email}\n        onChange={handleOnChange}\n      />\n      <input\n        type='text'\n        placeholder='Phone ...'\n        name='phone'\n        value={phone}\n        onChange={handleOnChange}\n      />\n      <h5>Contact Type</h5>\n      <input\n        type='radio'\n        name='type'\n        value='personal'\n        checked={type === 'personal'}\n        onChange={handleOnChange}\n      />\n      Personal {''}\n      <input\n        type='radio'\n        name='type'\n        value='professional'\n        checked={type === 'professional'}\n        onChange={handleOnChange}\n      />\n      Professional\n      <div>\n        <button className='btn btn-primary btn-block'>\n          {current ? 'Update Contact' : 'Add Contact'}\n        </button>\n      </div>\n      {current && (\n        <div>\n          <button\n            className='btn btn-light btn-block'\n            onClick={handleClearContact}>\n            Clear Contact\n          </button>\n        </div>\n      )}\n    </form>\n  );\n};\n\nexport default ContactForm;\n"]},"metadata":{},"sourceType":"module"}