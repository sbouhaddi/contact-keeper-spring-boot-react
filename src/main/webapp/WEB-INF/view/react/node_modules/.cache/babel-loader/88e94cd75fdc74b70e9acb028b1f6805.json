{"ast":null,"code":"var _jsxFileName = \"/Users/bouhaddisabri/IdeaProjects/DependecyInjection-Spring5/contacts-app/src/context/contact/ContactState.js\";\nimport React, { useReducer } from 'react';\nimport axios from 'axios';\nimport ContactContext from './contactContext';\nimport ContactReducer from './contactReducer';\nimport { LOAD_CONTACTS, ADD_CONTACT, DELETE_CONTACT, UPDATE_CONTACT, SET_CURRENT, CLEAR_CURRENT, CLEAR_FILTER, FILTER_CONTACTS } from '../types';\n\nconst ContactState = ({\n  children\n}) => {\n  const initialState = {\n    contacts: [],\n    current: null,\n    filtered: null\n  };\n  const [state, dispatch] = useReducer(ContactReducer, initialState); //LOAD CONTACTS\n\n  const loadContacts = async name => {\n    try {\n      const res = await axios.post(`api/contacts`, contact);\n      dispatch({\n        type: ADD_CONTACT,\n        payload: contact\n      });\n    } catch (error) {}\n  }; //ADD CONTACT\n\n\n  const addContact = async contact => {\n    try {\n      const res = await axios.post(`api/contacts`, contact);\n      dispatch({\n        type: ADD_CONTACT,\n        payload: contact\n      });\n    } catch (error) {}\n  }; //DELETE CONTACT\n\n\n  const deleteContact = id => {\n    dispatch({\n      type: DELETE_CONTACT,\n      payload: id\n    });\n  }; //SET CURRENT\n\n\n  const setCurrent = contact => {\n    dispatch({\n      type: SET_CURRENT,\n      payload: contact\n    });\n  }; //CLEAR CURRENT\n\n\n  const clearCurrent = () => {\n    dispatch({\n      type: CLEAR_CURRENT\n    });\n  }; //UPDATE CONTACT\n\n\n  const updateContact = contact => {\n    dispatch({\n      type: UPDATE_CONTACT,\n      payload: contact\n    });\n  }; //FILTER CONTACTS\n\n\n  const filterContacts = text => {\n    dispatch({\n      type: FILTER_CONTACTS,\n      payload: text\n    });\n  }; //CLEAR FILTER\n\n\n  const clearFilter = () => {\n    dispatch({\n      type: CLEAR_FILTER\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(ContactContext.Provider, {\n    value: {\n      contacts: state.contacts,\n      current: state.current,\n      filtered: state.filtered,\n      loadContacts,\n      addContact,\n      deleteContact,\n      setCurrent,\n      clearCurrent,\n      updateContact,\n      filterContacts,\n      clearFilter\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 5\n    }\n  }, children);\n};\n\nexport default ContactState;","map":{"version":3,"sources":["/Users/bouhaddisabri/IdeaProjects/DependecyInjection-Spring5/contacts-app/src/context/contact/ContactState.js"],"names":["React","useReducer","axios","ContactContext","ContactReducer","LOAD_CONTACTS","ADD_CONTACT","DELETE_CONTACT","UPDATE_CONTACT","SET_CURRENT","CLEAR_CURRENT","CLEAR_FILTER","FILTER_CONTACTS","ContactState","children","initialState","contacts","current","filtered","state","dispatch","loadContacts","name","res","post","contact","type","payload","error","addContact","deleteContact","id","setCurrent","clearCurrent","updateContact","filterContacts","text","clearFilter"],"mappings":"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","sourcesContent":["import React, { useReducer } from 'react';\nimport axios from 'axios';\nimport ContactContext from './contactContext';\nimport ContactReducer from './contactReducer';\nimport {\n  LOAD_CONTACTS,\n  ADD_CONTACT,\n  DELETE_CONTACT,\n  UPDATE_CONTACT,\n  SET_CURRENT,\n  CLEAR_CURRENT,\n  CLEAR_FILTER,\n  FILTER_CONTACTS,\n} from '../types';\n\nconst ContactState = ({ children }) => {\n  const initialState = {\n    contacts: [],\n    current: null,\n    filtered: null,\n  };\n  const [state, dispatch] = useReducer(ContactReducer, initialState);\n\n  //LOAD CONTACTS\n  const loadContacts = async (name) => {\n    try {\n      const res = await axios.post(`api/contacts`, contact);\n      dispatch({\n        type: ADD_CONTACT,\n        payload: contact,\n      });\n    } catch (error) {}\n  };\n\n  //ADD CONTACT\n  const addContact = async (contact) => {\n    try {\n      const res = await axios.post(`api/contacts`, contact);\n      dispatch({\n        type: ADD_CONTACT,\n        payload: contact,\n      });\n    } catch (error) {}\n  };\n\n  //DELETE CONTACT\n  const deleteContact = (id) => {\n    dispatch({\n      type: DELETE_CONTACT,\n      payload: id,\n    });\n  };\n\n  //SET CURRENT\n  const setCurrent = (contact) => {\n    dispatch({\n      type: SET_CURRENT,\n      payload: contact,\n    });\n  };\n\n  //CLEAR CURRENT\n  const clearCurrent = () => {\n    dispatch({\n      type: CLEAR_CURRENT,\n    });\n  };\n\n  //UPDATE CONTACT\n  const updateContact = (contact) => {\n    dispatch({\n      type: UPDATE_CONTACT,\n      payload: contact,\n    });\n  };\n\n  //FILTER CONTACTS\n  const filterContacts = (text) => {\n    dispatch({\n      type: FILTER_CONTACTS,\n      payload: text,\n    });\n  };\n\n  //CLEAR FILTER\n  const clearFilter = () => {\n    dispatch({\n      type: CLEAR_FILTER,\n    });\n  };\n\n  return (\n    <ContactContext.Provider\n      value={{\n        contacts: state.contacts,\n        current: state.current,\n        filtered: state.filtered,\n        loadContacts,\n        addContact,\n        deleteContact,\n        setCurrent,\n        clearCurrent,\n        updateContact,\n        filterContacts,\n        clearFilter,\n      }}>\n      {children}\n    </ContactContext.Provider>\n  );\n};\n\nexport default ContactState;\n"]},"metadata":{},"sourceType":"module"}