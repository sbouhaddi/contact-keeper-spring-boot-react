{"ast":null,"code":"var _jsxFileName = \"/Users/bouhaddisabri/IdeaProjects/DependecyInjection-Spring5/contacts-app/src/components/contacts/Contacts.js\";\nimport React, { useContext, Fragment, useEffect } from 'react';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport ContactCOntext from '../../context/contact/contactContext';\nimport ContactItem from './ContactItem';\nimport AuthContext from '../../context/auth/authContext';\n\nconst Contacts = () => {\n  const {\n    contacts,\n    filtered\n  } = useContext(ContactCOntext);\n  const {\n    user,\n    loadContacts\n  } = useContext(AuthContext);\n  useEffect(() => {\n    if (user) {\n      loadContacts(user.name);\n    }\n  });\n\n  if (contacts.length === 0) {\n    return /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 12\n      }\n    }, \"Please add a contact\");\n  }\n\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(TransitionGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }, filtered !== null ? filtered.map(contact => /*#__PURE__*/React.createElement(CSSTransition, {\n    key: contact.id,\n    timeout: 500,\n    classNames: \"item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(ContactItem, {\n    contact: contact,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 17\n    }\n  }))) : contacts.map(contact => /*#__PURE__*/React.createElement(CSSTransition, {\n    key: contact.id,\n    timeout: 500,\n    classNames: \"item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(ContactItem, {\n    contact: contact,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }\n  })))));\n};\n\nexport default Contacts;","map":{"version":3,"sources":["/Users/bouhaddisabri/IdeaProjects/DependecyInjection-Spring5/contacts-app/src/components/contacts/Contacts.js"],"names":["React","useContext","Fragment","useEffect","CSSTransition","TransitionGroup","ContactCOntext","ContactItem","AuthContext","Contacts","contacts","filtered","user","loadContacts","name","length","map","contact","id"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,EAAsCC,SAAtC,QAAuD,OAAvD;AACA,SAASC,aAAT,EAAwBC,eAAxB,QAA+C,wBAA/C;AACA,OAAOC,cAAP,MAA2B,sCAA3B;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,WAAP,MAAwB,gCAAxB;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AACrB,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAAyBV,UAAU,CAACK,cAAD,CAAzC;AAEA,QAAM;AAAEM,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAyBZ,UAAU,CAACO,WAAD,CAAzC;AAEAL,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIS,IAAJ,EAAU;AACRC,MAAAA,YAAY,CAACD,IAAI,CAACE,IAAN,CAAZ;AACD;AACF,GAJQ,CAAT;;AAMA,MAAIJ,QAAQ,CAACK,MAAT,KAAoB,CAAxB,EAA2B;AACzB,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAAP;AACD;;AAED,sBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGJ,QAAQ,KAAK,IAAb,GACGA,QAAQ,CAACK,GAAT,CAAcC,OAAD,iBACX,oBAAC,aAAD;AAAe,IAAA,GAAG,EAAEA,OAAO,CAACC,EAA5B;AAAgC,IAAA,OAAO,EAAE,GAAzC;AAA8C,IAAA,UAAU,EAAC,MAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,WAAD;AAAa,IAAA,OAAO,EAAED,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CADH,GAMGP,QAAQ,CAACM,GAAT,CAAcC,OAAD,iBACX,oBAAC,aAAD;AAAe,IAAA,GAAG,EAAEA,OAAO,CAACC,EAA5B;AAAgC,IAAA,OAAO,EAAE,GAAzC;AAA8C,IAAA,UAAU,EAAC,MAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,WAAD;AAAa,IAAA,OAAO,EAAED,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CAPN,CADF,CADF;AAiBD,CAhCD;;AAkCA,eAAeR,QAAf","sourcesContent":["import React, { useContext, Fragment, useEffect } from 'react';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport ContactCOntext from '../../context/contact/contactContext';\nimport ContactItem from './ContactItem';\nimport AuthContext from '../../context/auth/authContext';\n\nconst Contacts = () => {\n  const { contacts, filtered } = useContext(ContactCOntext);\n\n  const { user, loadContacts } = useContext(AuthContext);\n\n  useEffect(() => {\n    if (user) {\n      loadContacts(user.name);\n    }\n  });\n\n  if (contacts.length === 0) {\n    return <h4>Please add a contact</h4>;\n  }\n\n  return (\n    <Fragment>\n      <TransitionGroup>\n        {filtered !== null\n          ? filtered.map((contact) => (\n              <CSSTransition key={contact.id} timeout={500} classNames='item'>\n                <ContactItem contact={contact} />\n              </CSSTransition>\n            ))\n          : contacts.map((contact) => (\n              <CSSTransition key={contact.id} timeout={500} classNames='item'>\n                <ContactItem contact={contact} />\n              </CSSTransition>\n            ))}\n      </TransitionGroup>\n    </Fragment>\n  );\n};\n\nexport default Contacts;\n"]},"metadata":{},"sourceType":"module"}