{"ast":null,"code":"var _jsxFileName = \"/Users/bouhaddisabri/IdeaProjects/DependecyInjection-Spring5/contacts-app/src/context/contact/ContactState.js\";\nimport React, { useReducer } from 'react';\nimport axios from 'axios';\nimport ContactContext from './contactContext';\nimport ContactReducer from './contactReducer';\nimport { LOAD_CONTACTS, ADD_CONTACT, CONTACT_ERROR, DELETE_CONTACT, UPDATE_CONTACT, SET_CURRENT, CLEAR_CURRENT, CLEAR_FILTER, FILTER_CONTACTS, CLEAR_CONTACTS } from '../types';\n\nconst ContactState = ({\n  children\n}) => {\n  const initialState = {\n    contacts: null,\n    current: null,\n    filtered: null,\n    error: null,\n    loading: true\n  };\n  const [state, dispatch] = useReducer(ContactReducer, initialState); //LOAD CONTACTS\n\n  const loadContacts = async () => {\n    try {\n      const res = await axios.get(`api/getContacts`);\n      dispatch({\n        type: LOAD_CONTACTS,\n        payload: res.data\n      });\n    } catch (error) {\n      dispatch({\n        type: CONTACT_ERROR,\n        payload: error.response.data\n      });\n    }\n  }; //ADD CONTACT\n\n\n  const addContact = async contact => {\n    try {\n      const res = await axios.post(`api/contacts`, contact);\n      dispatch({\n        type: ADD_CONTACT,\n        payload: res.data\n      });\n    } catch (error) {\n      dispatch({\n        type: CONTACT_ERROR,\n        payload: error.response.data\n      });\n    }\n  }; //DELETE CONTACT\n\n\n  const deleteContact = async id => {\n    try {\n      await axios.delete(`api/contacts/${id}`);\n      dispatch({\n        type: DELETE_CONTACT,\n        payload: id\n      });\n    } catch (error) {\n      dispatch({\n        type: CONTACT_ERROR,\n        payload: error.response.data\n      });\n    }\n  }; //SET CURRENT\n\n\n  const setCurrent = contact => {\n    dispatch({\n      type: SET_CURRENT,\n      payload: contact\n    });\n  }; //CLEAR CURRENT\n\n\n  const clearCurrent = () => {\n    dispatch({\n      type: CLEAR_CURRENT\n    });\n  }; //UPDATE CONTACT\n\n\n  const updateContact = async contact => {\n    console.log('Before' + contact);\n\n    try {\n      const res = await axios.put(`api/contacts`, contact);\n      console.log('After' + res.data);\n      dispatch({\n        type: UPDATE_CONTACT,\n        payload: res.data\n      });\n    } catch (error) {\n      dispatch({\n        type: CONTACT_ERROR,\n        payload: error.response.data\n      });\n    }\n  }; //FILTER CONTACTS\n\n\n  const filterContacts = text => {\n    dispatch({\n      type: FILTER_CONTACTS,\n      payload: text\n    });\n  }; //CLEAR FILTER\n\n\n  const clearFilter = () => {\n    dispatch({\n      type: CLEAR_FILTER\n    });\n  }; //CLEAR CONTACTS\n\n\n  const clearContacts = () => {\n    dispatch({\n      type: CLEAR_CONTACTS\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(ContactContext.Provider, {\n    value: {\n      contacts: state.contacts,\n      current: state.current,\n      filtered: state.filtered,\n      error: state.error,\n      loading: state.loading,\n      loadContacts,\n      addContact,\n      deleteContact,\n      setCurrent,\n      clearCurrent,\n      updateContact,\n      filterContacts,\n      clearFilter,\n      clearContacts\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 5\n    }\n  }, children);\n};\n\nexport default ContactState;","map":{"version":3,"sources":["/Users/bouhaddisabri/IdeaProjects/DependecyInjection-Spring5/contacts-app/src/context/contact/ContactState.js"],"names":["React","useReducer","axios","ContactContext","ContactReducer","LOAD_CONTACTS","ADD_CONTACT","CONTACT_ERROR","DELETE_CONTACT","UPDATE_CONTACT","SET_CURRENT","CLEAR_CURRENT","CLEAR_FILTER","FILTER_CONTACTS","CLEAR_CONTACTS","ContactState","children","initialState","contacts","current","filtered","error","loading","state","dispatch","loadContacts","res","get","type","payload","data","response","addContact","contact","post","deleteContact","id","delete","setCurrent","clearCurrent","updateContact","console","log","put","filterContacts","text","clearFilter","clearContacts"],"mappings":"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","sourcesContent":["import React, { useReducer } from 'react';\nimport axios from 'axios';\nimport ContactContext from './contactContext';\nimport ContactReducer from './contactReducer';\nimport {\n  LOAD_CONTACTS,\n  ADD_CONTACT,\n  CONTACT_ERROR,\n  DELETE_CONTACT,\n  UPDATE_CONTACT,\n  SET_CURRENT,\n  CLEAR_CURRENT,\n  CLEAR_FILTER,\n  FILTER_CONTACTS,\n  CLEAR_CONTACTS,\n} from '../types';\n\nconst ContactState = ({ children }) => {\n  const initialState = {\n    contacts: null,\n    current: null,\n    filtered: null,\n    error: null,\n    loading: true,\n  };\n  const [state, dispatch] = useReducer(ContactReducer, initialState);\n\n  //LOAD CONTACTS\n  const loadContacts = async () => {\n    try {\n      const res = await axios.get(`api/getContacts`);\n      dispatch({\n        type: LOAD_CONTACTS,\n        payload: res.data,\n      });\n    } catch (error) {\n      dispatch({\n        type: CONTACT_ERROR,\n        payload: error.response.data,\n      });\n    }\n  };\n\n  //ADD CONTACT\n  const addContact = async (contact) => {\n    try {\n      const res = await axios.post(`api/contacts`, contact);\n      dispatch({\n        type: ADD_CONTACT,\n        payload: res.data,\n      });\n    } catch (error) {\n      dispatch({\n        type: CONTACT_ERROR,\n        payload: error.response.data,\n      });\n    }\n  };\n\n  //DELETE CONTACT\n  const deleteContact = async (id) => {\n    try {\n      await axios.delete(`api/contacts/${id}`);\n      dispatch({\n        type: DELETE_CONTACT,\n        payload: id,\n      });\n    } catch (error) {\n      dispatch({\n        type: CONTACT_ERROR,\n        payload: error.response.data,\n      });\n    }\n  };\n\n  //SET CURRENT\n  const setCurrent = (contact) => {\n    dispatch({\n      type: SET_CURRENT,\n      payload: contact,\n    });\n  };\n\n  //CLEAR CURRENT\n  const clearCurrent = () => {\n    dispatch({\n      type: CLEAR_CURRENT,\n    });\n  };\n\n  //UPDATE CONTACT\n  const updateContact = async (contact) => {\n    console.log('Before' + contact);\n    try {\n      const res = await axios.put(`api/contacts`, contact);\n      console.log('After' + res.data);\n      dispatch({\n        type: UPDATE_CONTACT,\n        payload: res.data,\n      });\n    } catch (error) {\n      dispatch({\n        type: CONTACT_ERROR,\n        payload: error.response.data,\n      });\n    }\n  };\n\n  //FILTER CONTACTS\n  const filterContacts = (text) => {\n    dispatch({\n      type: FILTER_CONTACTS,\n      payload: text,\n    });\n  };\n\n  //CLEAR FILTER\n  const clearFilter = () => {\n    dispatch({\n      type: CLEAR_FILTER,\n    });\n  };\n\n  //CLEAR CONTACTS\n  const clearContacts = () => {\n    dispatch({ type: CLEAR_CONTACTS });\n  };\n\n  return (\n    <ContactContext.Provider\n      value={{\n        contacts: state.contacts,\n        current: state.current,\n        filtered: state.filtered,\n        error: state.error,\n        loading: state.loading,\n        loadContacts,\n        addContact,\n        deleteContact,\n        setCurrent,\n        clearCurrent,\n        updateContact,\n        filterContacts,\n        clearFilter,\n        clearContacts,\n      }}>\n      {children}\n    </ContactContext.Provider>\n  );\n};\n\nexport default ContactState;\n"]},"metadata":{},"sourceType":"module"}