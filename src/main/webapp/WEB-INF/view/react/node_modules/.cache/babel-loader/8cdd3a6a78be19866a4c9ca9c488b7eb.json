{"ast":null,"code":"var _jsxFileName = \"/Users/bouhaddisabri/IdeaProjects/DependecyInjection-Spring5/contacts-app/src/context/auth/AuthState.js\";\nimport React, { useReducer } from 'react';\nimport AuthContext from './authContext';\nimport AuthReducer from './authReducer';\nimport axios from 'axios';\nimport { REGISTER_SUCCESS, LOGIN_SUCCESS, REGISTER_FAIL, USER_LOADED, AUTH_ERROR, LOGIN_FAIL, LOGOUT, CLEAR_ERRORS } from '../types';\nimport setAuthToken from '../../utils/setAuthToken';\n\nconst AuthState = ({\n  children\n}) => {\n  const initialState = {\n    token: localStorage.getItem('token'),\n    isAuthenticated: null,\n    user: null,\n    loading: true,\n    error: null\n  };\n  const [state, dispatch] = useReducer(AuthReducer, initialState); //LOAD USER\n\n  const loadUser = async () => {\n    setAuthToken(localStorage.token);\n\n    try {\n      const res = await axios.get(`api/authenticate`);\n      dispatch({\n        type: USER_LOADED,\n        payload: res.data\n      });\n    } catch (error) {\n      dispatch({\n        type: AUTH_ERROR\n      });\n    }\n  }; //REGISTER USER\n\n\n  const registerUser = async user => {\n    try {\n      const res = await axios.post(`/api/sign-up`, user);\n      dispatch({\n        type: REGISTER_SUCCESS,\n        payload: res.data\n      });\n      loadUser();\n    } catch (error) {\n      dispatch({\n        type: REGISTER_FAIL,\n        payload: error.response.data\n      });\n    }\n  }; //LOGIN USER\n\n\n  const loginUser = async data => {\n    try {\n      const res = await axios.post(`/api/login`, data);\n      dispatch({\n        type: LOGIN_SUCCESS,\n        payload: res.data\n      });\n      loadUser();\n    } catch (error) {\n      dispatch({\n        type: LOGIN_FAIL,\n        payload: error.response.data\n      });\n    }\n  }; //LOGOUT\n\n\n  const logout = async () => {\n    try {\n      await axios.get(`/api/logout`);\n      dispatch({\n        type: LOGOUT\n      });\n    } catch (error) {\n      console.log(error.response);\n    }\n  }; //CLEAR ERROR\n\n\n  const clearErrors = () => dispatch({\n    type: CLEAR_ERRORS\n  });\n\n  return /*#__PURE__*/React.createElement(AuthContext.Provider, {\n    value: {\n      token: state.token,\n      isAuthenticated: state.isAuthenticated,\n      user: state.user,\n      loading: state.loading,\n      error: state.error,\n      registerUser,\n      clearErrors,\n      loadUser,\n      loginUser,\n      logout\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 5\n    }\n  }, children);\n};\n\nexport default AuthState;","map":{"version":3,"sources":["/Users/bouhaddisabri/IdeaProjects/DependecyInjection-Spring5/contacts-app/src/context/auth/AuthState.js"],"names":["React","useReducer","AuthContext","AuthReducer","axios","REGISTER_SUCCESS","LOGIN_SUCCESS","REGISTER_FAIL","USER_LOADED","AUTH_ERROR","LOGIN_FAIL","LOGOUT","CLEAR_ERRORS","setAuthToken","AuthState","children","initialState","token","localStorage","getItem","isAuthenticated","user","loading","error","state","dispatch","loadUser","res","get","type","payload","data","registerUser","post","response","loginUser","logout","console","log","clearErrors"],"mappings":"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","sourcesContent":["import React, { useReducer } from 'react';\nimport AuthContext from './authContext';\nimport AuthReducer from './authReducer';\nimport axios from 'axios';\nimport {\n  REGISTER_SUCCESS,\n  LOGIN_SUCCESS,\n  REGISTER_FAIL,\n  USER_LOADED,\n  AUTH_ERROR,\n  LOGIN_FAIL,\n  LOGOUT,\n  CLEAR_ERRORS,\n} from '../types';\n\nimport setAuthToken from '../../utils/setAuthToken';\n\nconst AuthState = ({ children }) => {\n  const initialState = {\n    token: localStorage.getItem('token'),\n    isAuthenticated: null,\n    user: null,\n    loading: true,\n    error: null,\n  };\n  const [state, dispatch] = useReducer(AuthReducer, initialState);\n\n  //LOAD USER\n  const loadUser = async () => {\n    setAuthToken(localStorage.token);\n\n    try {\n      const res = await axios.get(`api/authenticate`);\n      dispatch({\n        type: USER_LOADED,\n        payload: res.data,\n      });\n    } catch (error) {\n      dispatch({ type: AUTH_ERROR });\n    }\n  };\n\n  //REGISTER USER\n  const registerUser = async (user) => {\n    try {\n      const res = await axios.post(`/api/sign-up`, user);\n      dispatch({\n        type: REGISTER_SUCCESS,\n        payload: res.data,\n      });\n      loadUser();\n    } catch (error) {\n      dispatch({\n        type: REGISTER_FAIL,\n        payload: error.response.data,\n      });\n    }\n  };\n\n  //LOGIN USER\n  const loginUser = async (data) => {\n    try {\n      const res = await axios.post(`/api/login`, data);\n      dispatch({\n        type: LOGIN_SUCCESS,\n        payload: res.data,\n      });\n      loadUser();\n    } catch (error) {\n      dispatch({\n        type: LOGIN_FAIL,\n        payload: error.response.data,\n      });\n    }\n  };\n\n  //LOGOUT\n  const logout = async () => {\n    try {\n      await axios.get(`/api/logout`);\n      dispatch({\n        type: LOGOUT,\n      });\n    } catch (error) {\n      console.log(error.response);\n    }\n  };\n\n  //CLEAR ERROR\n  const clearErrors = () => dispatch({ type: CLEAR_ERRORS });\n\n  return (\n    <AuthContext.Provider\n      value={{\n        token: state.token,\n        isAuthenticated: state.isAuthenticated,\n        user: state.user,\n        loading: state.loading,\n        error: state.error,\n        registerUser,\n        clearErrors,\n        loadUser,\n        loginUser,\n        logout,\n      }}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport default AuthState;\n"]},"metadata":{},"sourceType":"module"}