{"ast":null,"code":"var _jsxFileName = \"/Users/bouhaddisabri/IdeaProjects/DependecyInjection-Spring5/contacts-app/src/components/contacts/Contacts.js\";\nimport React, { useContext, Fragment, useEffect } from 'react';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport ContactCOntext from '../../context/contact/contactContext';\nimport ContactItem from './ContactItem';\nimport Spinner from '../layouts/Spinner';\n\nconst Contacts = () => {\n  const {\n    contacts,\n    filtered,\n    loadContacts,\n    loading\n  } = useContext(ContactCOntext);\n  useEffect(() => {\n    loadContacts(); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  if (contacts !== null && contacts.length === 0 && !loading) {\n    return /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 12\n      }\n    }, \"Please add a contact\");\n  }\n\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }\n  }, contacts !== null && !loading ? /*#__PURE__*/React.createElement(TransitionGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }, filtered !== null ? filtered.map(contact => /*#__PURE__*/React.createElement(CSSTransition, {\n    key: contact.id,\n    timeout: 500,\n    classNames: \"item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(ContactItem, {\n    contact: contact,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 19\n    }\n  }))) : contacts.map(contact => /*#__PURE__*/React.createElement(CSSTransition, {\n    key: contact.id,\n    timeout: 500,\n    classNames: \"item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(ContactItem, {\n    contact: contact,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 19\n    }\n  })))) : /*#__PURE__*/React.createElement(Spinner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }));\n};\n\nexport default Contacts;","map":{"version":3,"sources":["/Users/bouhaddisabri/IdeaProjects/DependecyInjection-Spring5/contacts-app/src/components/contacts/Contacts.js"],"names":["React","useContext","Fragment","useEffect","CSSTransition","TransitionGroup","ContactCOntext","ContactItem","Spinner","Contacts","contacts","filtered","loadContacts","loading","length","map","contact","id"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,EAAsCC,SAAtC,QAAuD,OAAvD;AACA,SAASC,aAAT,EAAwBC,eAAxB,QAA+C,wBAA/C;AACA,OAAOC,cAAP,MAA2B,sCAA3B;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,OAAP,MAAoB,oBAApB;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AACrB,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,QAAZ;AAAsBC,IAAAA,YAAtB;AAAoCC,IAAAA;AAApC,MAAgDZ,UAAU,CAC9DK,cAD8D,CAAhE;AAIAH,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,YAAY,GADE,CAEd;AACD,GAHQ,EAGN,EAHM,CAAT;;AAKA,MAAIF,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,CAACI,MAAT,KAAoB,CAAzC,IAA8C,CAACD,OAAnD,EAA4D;AAC1D,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAAP;AACD;;AAED,sBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGH,QAAQ,KAAK,IAAb,IAAqB,CAACG,OAAtB,gBACC,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,QAAQ,KAAK,IAAb,GACGA,QAAQ,CAACI,GAAT,CAAcC,OAAD,iBACX,oBAAC,aAAD;AAAe,IAAA,GAAG,EAAEA,OAAO,CAACC,EAA5B;AAAgC,IAAA,OAAO,EAAE,GAAzC;AAA8C,IAAA,UAAU,EAAC,MAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,WAAD;AAAa,IAAA,OAAO,EAAED,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CADH,GAMGN,QAAQ,CAACK,GAAT,CAAcC,OAAD,iBACX,oBAAC,aAAD;AAAe,IAAA,GAAG,EAAEA,OAAO,CAACC,EAA5B;AAAgC,IAAA,OAAO,EAAE,GAAzC;AAA8C,IAAA,UAAU,EAAC,MAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,WAAD;AAAa,IAAA,OAAO,EAAED,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CAPN,CADD,gBAeC,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAhBJ,CADF;AAqBD,CAnCD;;AAqCA,eAAeP,QAAf","sourcesContent":["import React, { useContext, Fragment, useEffect } from 'react';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport ContactCOntext from '../../context/contact/contactContext';\nimport ContactItem from './ContactItem';\nimport Spinner from '../layouts/Spinner';\n\nconst Contacts = () => {\n  const { contacts, filtered, loadContacts, loading } = useContext(\n    ContactCOntext\n  );\n\n  useEffect(() => {\n    loadContacts();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  if (contacts !== null && contacts.length === 0 && !loading) {\n    return <h4>Please add a contact</h4>;\n  }\n\n  return (\n    <Fragment>\n      {contacts !== null && !loading ? (\n        <TransitionGroup>\n          {filtered !== null\n            ? filtered.map((contact) => (\n                <CSSTransition key={contact.id} timeout={500} classNames='item'>\n                  <ContactItem contact={contact} />\n                </CSSTransition>\n              ))\n            : contacts.map((contact) => (\n                <CSSTransition key={contact.id} timeout={500} classNames='item'>\n                  <ContactItem contact={contact} />\n                </CSSTransition>\n              ))}\n        </TransitionGroup>\n      ) : (\n        <Spinner />\n      )}\n    </Fragment>\n  );\n};\n\nexport default Contacts;\n"]},"metadata":{},"sourceType":"module"}