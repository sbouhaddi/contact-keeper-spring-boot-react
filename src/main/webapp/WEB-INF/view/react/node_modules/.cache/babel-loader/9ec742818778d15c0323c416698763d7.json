{"ast":null,"code":"import { ADD_CONTACT, DELETE_CONTACT, UPDATE_CONTACT, SET_CURRENT, CLEAR_CURRENT, CLEAR_FILTER, FILTER_CONTACTS, LOAD_CONTACTS, CONTACT_ERROR } from '../types';\nexport default ((state, action) => {\n  switch (action.type) {\n    case LOAD_CONTACTS:\n      return { ...state,\n        contacts: action.payload\n      };\n\n    case ADD_CONTACT:\n      return { ...state,\n        contacts: [...state.contacts, action.payload]\n      };\n\n    case DELETE_CONTACT:\n      return { ...state,\n        contacts: state.contacts.filter(contact => contact.id !== action.payload)\n      };\n\n    case UPDATE_CONTACT:\n      return { ...state,\n        contacts: state.contacts.map(contact => contact.id === action.payload.id ? action.payload : contact)\n      };\n\n    case FILTER_CONTACTS:\n      return { ...state,\n        filtered: state.contacts.filter(contact => {\n          const regex = new RegExp(`${action.payload}`, 'gi');\n          return contact.name.match(regex) || contact.email.match(regex);\n        })\n      };\n\n    case CLEAR_FILTER:\n      return { ...state,\n        filtered: null\n      };\n\n    case SET_CURRENT:\n      return { ...state,\n        current: action.payload\n      };\n\n    case CLEAR_CURRENT:\n      return { ...state,\n        current: null\n      };\n\n    case CONTACT_ERROR:\n      return { ...state,\n        error: action.payload\n      };\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/Users/bouhaddisabri/IdeaProjects/DependecyInjection-Spring5/contacts-app/src/context/contact/contactReducer.js"],"names":["ADD_CONTACT","DELETE_CONTACT","UPDATE_CONTACT","SET_CURRENT","CLEAR_CURRENT","CLEAR_FILTER","FILTER_CONTACTS","LOAD_CONTACTS","CONTACT_ERROR","state","action","type","contacts","payload","filter","contact","id","map","filtered","regex","RegExp","name","match","email","current","error"],"mappings":"AAAA,SACEA,WADF,EAEEC,cAFF,EAGEC,cAHF,EAIEC,WAJF,EAKEC,aALF,EAMEC,YANF,EAOEC,eAPF,EAQEC,aARF,EASEC,aATF,QAUO,UAVP;AAYA,gBAAe,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAChC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKJ,aAAL;AACE,aAAO,EACL,GAAGE,KADE;AAELG,QAAAA,QAAQ,EAAEF,MAAM,CAACG;AAFZ,OAAP;;AAIF,SAAKb,WAAL;AACE,aAAO,EACL,GAAGS,KADE;AAELG,QAAAA,QAAQ,EAAE,CAAC,GAAGH,KAAK,CAACG,QAAV,EAAoBF,MAAM,CAACG,OAA3B;AAFL,OAAP;;AAIF,SAAKZ,cAAL;AACE,aAAO,EACL,GAAGQ,KADE;AAELG,QAAAA,QAAQ,EAAEH,KAAK,CAACG,QAAN,CAAeE,MAAf,CACPC,OAAD,IAAaA,OAAO,CAACC,EAAR,KAAeN,MAAM,CAACG,OAD3B;AAFL,OAAP;;AAMF,SAAKX,cAAL;AACE,aAAO,EACL,GAAGO,KADE;AAELG,QAAAA,QAAQ,EAAEH,KAAK,CAACG,QAAN,CAAeK,GAAf,CAAoBF,OAAD,IAC3BA,OAAO,CAACC,EAAR,KAAeN,MAAM,CAACG,OAAP,CAAeG,EAA9B,GAAmCN,MAAM,CAACG,OAA1C,GAAoDE,OAD5C;AAFL,OAAP;;AAMF,SAAKT,eAAL;AACE,aAAO,EACL,GAAGG,KADE;AAELS,QAAAA,QAAQ,EAAET,KAAK,CAACG,QAAN,CAAeE,MAAf,CAAuBC,OAAD,IAAa;AAC3C,gBAAMI,KAAK,GAAG,IAAIC,MAAJ,CAAY,GAAEV,MAAM,CAACG,OAAQ,EAA7B,EAAgC,IAAhC,CAAd;AACA,iBAAOE,OAAO,CAACM,IAAR,CAAaC,KAAb,CAAmBH,KAAnB,KAA6BJ,OAAO,CAACQ,KAAR,CAAcD,KAAd,CAAoBH,KAApB,CAApC;AACD,SAHS;AAFL,OAAP;;AAOF,SAAKd,YAAL;AACE,aAAO,EACL,GAAGI,KADE;AAELS,QAAAA,QAAQ,EAAE;AAFL,OAAP;;AAIF,SAAKf,WAAL;AACE,aAAO,EACL,GAAGM,KADE;AAELe,QAAAA,OAAO,EAAEd,MAAM,CAACG;AAFX,OAAP;;AAIF,SAAKT,aAAL;AACE,aAAO,EACL,GAAGK,KADE;AAELe,QAAAA,OAAO,EAAE;AAFJ,OAAP;;AAIF,SAAKhB,aAAL;AACE,aAAO,EAAE,GAAGC,KAAL;AAAYgB,QAAAA,KAAK,EAAEf,MAAM,CAACG;AAA1B,OAAP;;AACF;AACE,aAAOJ,KAAP;AAnDJ;AAqDD,CAtDD","sourcesContent":["import {\n  ADD_CONTACT,\n  DELETE_CONTACT,\n  UPDATE_CONTACT,\n  SET_CURRENT,\n  CLEAR_CURRENT,\n  CLEAR_FILTER,\n  FILTER_CONTACTS,\n  LOAD_CONTACTS,\n  CONTACT_ERROR,\n} from '../types';\n\nexport default (state, action) => {\n  switch (action.type) {\n    case LOAD_CONTACTS:\n      return {\n        ...state,\n        contacts: action.payload,\n      };\n    case ADD_CONTACT:\n      return {\n        ...state,\n        contacts: [...state.contacts, action.payload],\n      };\n    case DELETE_CONTACT:\n      return {\n        ...state,\n        contacts: state.contacts.filter(\n          (contact) => contact.id !== action.payload\n        ),\n      };\n    case UPDATE_CONTACT:\n      return {\n        ...state,\n        contacts: state.contacts.map((contact) =>\n          contact.id === action.payload.id ? action.payload : contact\n        ),\n      };\n    case FILTER_CONTACTS:\n      return {\n        ...state,\n        filtered: state.contacts.filter((contact) => {\n          const regex = new RegExp(`${action.payload}`, 'gi');\n          return contact.name.match(regex) || contact.email.match(regex);\n        }),\n      };\n    case CLEAR_FILTER:\n      return {\n        ...state,\n        filtered: null,\n      };\n    case SET_CURRENT:\n      return {\n        ...state,\n        current: action.payload,\n      };\n    case CLEAR_CURRENT:\n      return {\n        ...state,\n        current: null,\n      };\n    case CONTACT_ERROR:\n      return { ...state, error: action.payload };\n    default:\n      return state;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}